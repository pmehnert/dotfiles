# vim:fileencoding=utf-8:foldmethod=marker

#: Fonts {{{

font_family      JetBrainsMono Nerd Font
# bold_font        auto
# italic_font      auto
# bold_italic_font auto

font_size 12.0

disable_ligatures cursor

#: }}}

#: Cursor customization {{{

# cursor #cccccc
# cursor_text_color #111111
# cursor_shape block
# cursor_beam_thickness 1.5
# cursor_underline_thickness 2.0
# cursor_blink_interval -1
# cursor_stop_blinking_after 15.0

#: }}}

#: Scrollback {{{

scrollback_lines 4096
# scrollback_pager nvimpager -p
scrollback_pager less --chop-long-lines --RAW-CONTROL-CHARS +INPUT_LINE_NUMBER
# scrollback_pager_history_size 0
# scrollback_fill_enlarged_window no

# wheel_scroll_multiplier 5.0
# wheel_scroll_min_lines 1
# touch_scroll_multiplier 1.0

#: }}}

#: Mouse {{{

# url_color #0087bd
# url_style curly
# open_url_with default
# url_prefixes file ftp ftps gemini git gopher http https irc ircs kitty mailto news sftp ssh
# detect_urls yes
# url_excluded_characters

# select_by_word_characters @-./_~?&=%+#
# select_by_word_characters_forward

# click_interval -1.0
# focus_follows_mouse no

# pointer_shape_when_grabbed arrow
# default_pointer_shape beam
# pointer_shape_when_dragging beam

#: Mouse actions {{{

#: .. code-block:: none

#:     mouse_map button-name event-type modes action

#: Where button-name is one of left, middle, right, b1 ... b8 with
#: added keyboard modifiers. For example: ctrl+shift+left refers to
#: holding the Ctrl+Shift keys while clicking with the left mouse
#: button. The value b1 ... b8 can be used to refer to up to eight
#: buttons on a mouse.

#: event-type is one of press, release, doublepress, triplepress,
#: click, doubleclick. modes indicates whether the action is performed
#: when the mouse is grabbed by the program running in the terminal,
#: or not. The values are grabbed or ungrabbed or a comma separated
#: combination of them. grabbed refers to when the program running in
#: the terminal has requested mouse events. Note that the click and
#: double click events have a delay of click_interval to disambiguate
#: from double and triple presses.

#: You can run kitty with the kitty --debug-input command line option
#: to see mouse events. See the builtin actions below to get a sense
#: of what is possible.

#: If you want to unmap an action, map it to no_op. For example, to
#: disable opening of URLs with a plain click::

#:     mouse_map left click ungrabbed no_op

#: See all the mappable actions including mouse actions here
#: <https://sw.kovidgoyal.net/kitty/actions/>.

#: .. note::
#:     Once a selection is started, releasing the button that started it will
#:     automatically end it and no release event will be dispatched.

# clear_all_mouse_actions no

#: Remove all mouse action definitions up to this point. Useful, for
#: instance, to remove the default mouse actions.

#: Click the link under the mouse or move the cursor

# mouse_map left click ungrabbed mouse_handle_click selection link prompt

#::  First check for a selection and if one exists do nothing. Then
#::  check for a link under the mouse cursor and if one exists, click
#::  it. Finally check if the click happened at the current shell
#::  prompt and if so, move the cursor to the click location. Note
#::  that this requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: Click the link under the mouse or move the cursor even when grabbed

# mouse_map shift+left click grabbed,ungrabbed mouse_handle_click selection link prompt

#::  Same as above, except that the action is performed even when the
#::  mouse is grabbed by the program running in the terminal.

#: Click the link under the mouse cursor

# mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_handle_click link

#::  Variant with Ctrl+Shift is present because the simple click based
#::  version has an unavoidable delay of click_interval, to
#::  disambiguate clicks from double clicks.

#: Discard press event for link click

# mouse_map ctrl+shift+left press grabbed discard_event

#::  Prevent this press event from being sent to the program that has
#::  grabbed the mouse, as the corresponding release event is used to
#::  open a URL.

#: Paste from the primary selection

# mouse_map middle release ungrabbed paste_from_selection

#: Start selecting text

# mouse_map left press ungrabbed mouse_selection normal

#: Start selecting text in a rectangle

# mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle

#: Select a word

# mouse_map left doublepress ungrabbed mouse_selection word

#: Select a line

# mouse_map left triplepress ungrabbed mouse_selection line

#: Select line from point

# mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line.

#: Extend the current selection

# mouse_map right press ungrabbed mouse_selection extend

#::  If you want only the end of the selection to be moved instead of
#::  the nearest boundary, use move-end instead of extend.

#: Paste from the primary selection even when grabbed

# mouse_map shift+middle release ungrabbed,grabbed paste_selection
# mouse_map shift+middle press grabbed discard_event

#: Start selecting text even when grabbed

# mouse_map shift+left press ungrabbed,grabbed mouse_selection normal

#: Start selecting text in a rectangle even when grabbed

# mouse_map ctrl+shift+alt+left press ungrabbed,grabbed mouse_selection rectangle

#: Select a word even when grabbed

# mouse_map shift+left doublepress ungrabbed,grabbed mouse_selection word

#: Select a line even when grabbed

# mouse_map shift+left triplepress ungrabbed,grabbed mouse_selection line

#: Select line from point even when grabbed

# mouse_map ctrl+shift+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point

#::  Select from the clicked point to the end of the line even when
#::  grabbed.

#: Extend the current selection even when grabbed

# mouse_map shift+right press ungrabbed,grabbed mouse_selection extend

#: Show clicked command output in pager

# mouse_map ctrl+shift+right press ungrabbed mouse_show_command_output

#::  Requires shell integration
#::  <https://sw.kovidgoyal.net/kitty/shell-integration/> to work.

#: }}}

#: }}}

#: Performance tuning {{{

# repaint_delay 10
# input_delay 3
# sync_to_monitor yes

#: }}}

#: Window layout {{{

# remember_window_size  yes
# initial_window_width  640
# initial_window_height 400

# enabled_layouts *

# window_resize_step_cells 2
# window_resize_step_lines 2

# window_border_width 0.5pt
# draw_minimal_borders yes
# window_margin_width 0
# single_window_margin_width -1
# window_padding_width 0
# placement_strategy center

# active_border_color #00ff00
# inactive_border_color #cccccc
# bell_border_color #ff5a00
# inactive_text_alpha 1.0
# hide_window_decorations no

#: }}}

#: Tab bar {{{

# tab_bar_edge bottom
# tab_bar_margin_width 0.0
# tab_bar_margin_height 0.0 0.0
tab_bar_style slant
# tab_bar_align left
# tab_bar_min_tabs 2
# tab_switch_strategy previous
# tab_fade 0.25 0.5 0.75 1
# tab_separator " â”‡"
# tab_powerline_style angled
# tab_activity_symbol none
# tab_title_template "{fmt.fg.red}{bell_symbol}{activity_symbol}{fmt.fg.tab}{title}"
# active_tab_title_template none
# active_tab_foreground   #000
# active_tab_background   #eee
# active_tab_font_style   bold-italic
# inactive_tab_foreground #444
# inactive_tab_background #999
# inactive_tab_font_style normal
# tab_bar_background none
# tab_bar_margin_color none

#: }}}

#: Color scheme {{{

foreground #fbf1c7
background #1d2021

# selection_foreground #000000
# selection_background #fffacd

#: The color table {{{

#: The 256 terminal colors. There are 8 basic colors, each color has a
#: dull and bright version, for the first 16 colors. You can set the
#: remaining 240 colors as color16 to color255.

# color0 #000000
# color8 #767676

#: black

# color1 #cc0403
# color9 #f2201f

#: red

# color2  #19cb00
# color10 #23fd00

#: green

# color3  #cecb00
# color11 #fffd00

#: yellow

# color4  #0d73cc
# color12 #1a8fff

#: blue

# color5  #cb1ed1
# color13 #fd28ff

#: magenta

# color6  #0dcdcd
# color14 #14ffff

#: cyan

# color7  #dddddd
# color15 #ffffff

#: white

# mark1_foreground black

#: Color for marks of type 1

# mark1_background #98d3cb

#: Color for marks of type 1 (light steel blue)

# mark2_foreground black

#: Color for marks of type 2

# mark2_background #f2dcd3

#: Color for marks of type 1 (beige)

# mark3_foreground black

#: Color for marks of type 3

# mark3_background #f274bc

#: Color for marks of type 3 (violet)

#: }}}

#: }}}

#: Advanced {{{



# env
#:     env VAR1=a
#:     env VAR2=${HOME}/${VAR1}/b

#: }}}

#: OS specific tweaks {{{

wayland_titlebar_color #292929

#: }}}

#: Keyboard shortcuts {{{

#:     on_key_input: glfw key: 0x61 native_code: 0x61 action: PRESS mods: none text: 'a'
#:     map ctrl+0x61 something
#:     map kitty_mod+f1 discard_event
#:     map key combine <separator> action1 <separator> action2 <separator> action3 ...
#:     map kitty_mod+e combine : new_window : next_layout
#:     map key1>key2>key3 action
#:     map ctrl+f>2 set_font_size 20
# kitty_mod ctrl+shift

# action_alias

#: E.g. action_alias launch_tab launch --type=tab --cwd=current
#:     map f1 launch_tab vim
#:     map f2 launch_tab emacs

#: Clipboard {{{

# map kitty_mod+c copy_to_clipboard
# map cmd+c       copy_to_clipboard

# map kitty_mod+v paste_from_clipboard
# map cmd+v       paste_from_clipboard

# map kitty_mod+s  paste_from_selection
# map shift+insert paste_from_selection

# map kitty_mod+o pass_selection_to_program

#: }}}

#: Scrolling {{{

# map kitty_mod+up    scroll_line_up
# map kitty_mod+k     scroll_line_up
# map opt+cmd+page_up scroll_line_up
# map cmd+up          scroll_line_up

# map kitty_mod+down    scroll_line_down
# map kitty_mod+j       scroll_line_down
# map opt+cmd+page_down scroll_line_down
# map cmd+down          scroll_line_down

# map kitty_mod+page_up scroll_page_up
# map cmd+page_up       scroll_page_up

# map kitty_mod+page_down scroll_page_down
# map cmd+page_down       scroll_page_down

# map kitty_mod+home scroll_home
# map cmd+home       scroll_home

# map kitty_mod+end scroll_end
# map cmd+end       scroll_end

# map kitty_mod+h show_scrollback
# map kitty_mod+g show_last_command_output

#: }}}

#: Window management {{{

# map kitty_mod+enter new_window
# map cmd+enter       new_window

#::      map kitty_mod+y launch mutt
#::      map ctrl+alt+enter launch --cwd=current
#::      map ctrl+enter launch --allow-remote-control some_program
#::      map ctrl+n launch --location=neighbor
#::      map ctrl+f launch --location=first

# map kitty_mod+n new_os_window
# map cmd+n       new_os_window

# map kitty_mod+w close_window
# map shift+cmd+d close_window

# map kitty_mod+] next_window
# map kitty_mod+[ previous_window
# map kitty_mod+f move_window_forward
# map kitty_mod+b move_window_backward
# map kitty_mod+` move_window_to_top

# map kitty_mod+r start_resizing_window
# map cmd+r       start_resizing_window

# map kitty_mod+1 first_window
# map cmd+1       first_window
# map kitty_mod+2 second_window
# map cmd+2       second_window
# map kitty_mod+3 third_window
# map cmd+3       third_window
# map kitty_mod+4 fourth_window
# map cmd+4       fourth_window
# map kitty_mod+5 fifth_window
# map cmd+5       fifth_window
# map kitty_mod+6 sixth_window
# map cmd+6       sixth_window
# map kitty_mod+7 seventh_window
# map cmd+7       seventh_window
# map kitty_mod+8 eighth_window
# map cmd+8       eighth_window
# map kitty_mod+9 ninth_window
# map cmd+9       ninth_window
# map kitty_mod+0 tenth_window

# map kitty_mod+f7 focus_visible_window
# map kitty_mod+f8 swap_with_window

#: }}}

#: Tab management {{{

# map kitty_mod+right next_tab
# map shift+cmd+]     next_tab
# map ctrl+tab        next_tab

# map kitty_mod+left previous_tab
# map shift+cmd+[    previous_tab
# map ctrl+shift+tab previous_tab

# map kitty_mod+t new_tab
# map cmd+t       new_tab

# map kitty_mod+q close_tab
# map cmd+w       close_tab

# map shift+cmd+w close_os_window

# map kitty_mod+. move_tab_forward
# map kitty_mod+, move_tab_backward

# map kitty_mod+alt+t set_tab_title
# map shift+cmd+i     set_tab_title

#: }}}

#: Layout management {{{

# map kitty_mod+l next_layout
#:     map ctrl+alt+t goto_layout tall
#:     map ctrl+alt+s goto_layout stack
#:     map ctrl+alt+p last_used_layout
#:     map ctrl+alt+z toggle_layout stack

#: }}}

#: Font sizes {{{

# map kitty_mod+equal  change_font_size all +2.0
# map kitty_mod+plus   change_font_size all +2.0
# map kitty_mod+kp_add change_font_size all +2.0
# map cmd+plus         change_font_size all +2.0
# map cmd+equal        change_font_size all +2.0
# map shift+cmd+equal  change_font_size all +2.0

# map kitty_mod+minus       change_font_size all -2.0
# map kitty_mod+kp_subtract change_font_size all -2.0
# map cmd+minus             change_font_size all -2.0
# map shift+cmd+minus       change_font_size all -2.0

# map kitty_mod+backspace change_font_size all 0
# map cmd+0               change_font_size all 0

#: }}}

#: Select and act on visible text {{{

# map kitty_mod+e open_url_with_hints

#: }}}

#: Miscellaneous {{{

# map kitty_mod+f1 show_kitty_doc overview

# map kitty_mod+f11 toggle_fullscreen
# map ctrl+cmd+f    toggle_fullscreen
# map kitty_mod+f10 toggle_maximized

# map kitty_mod+u    kitten unicode_input
# map ctrl+cmd+space kitten unicode_input

# map kitty_mod+f2 edit_config_file
# map cmd+,        edit_config_file

# map kitty_mod+escape kitty_shell window

#: Reset the terminal

# map kitty_mod+delete clear_terminal reset active
# map opt+cmd+r        clear_terminal reset active

#: Clear up to cursor line

# map cmd+k clear_terminal to_cursor active

#: Reload kitty.conf

# map kitty_mod+f5 load_config_file
# map ctrl+cmd+,   load_config_file

# map kitty_mod+f6 debug_config
# map opt+cmd+,    debug_config

#: Open kitty Website

#: }}}

#: }}}
